= frogger
'Hop across the logs'

Navigating your log files can feel like you are crossing a busy road while attempting to avoid the cars.
Frogger makes your log files more fun by adding some 8 bit colour and a some nice formatting.

== Why?
I created frogger after squinting at the log tail so many times and feeling like a complete idiot as I searched for a needle in a haystack.

I thought surely this can be more fun.

Other log enhancing gems are all about tracking performance and other such tasks.
Frogger is not about speed, it's about getting through the logs with the least amount of pain.

== What it does

Initially I've added a few tricks for working with cucumber log files.
Run a cucumber feature and tail your log file
The scenario name and step names will annotate your log file in glorious 8 bit colour

== How

  1. Add this to your Gemfile:
      gem 'frogger'

  2. Add this to your cucumber env.rb file, below your cucumber requires:
      require 'frogger/cucumber'
    
Windows users:
  You will need the Win32 Console Ansi gem.  Get it by running this from the command line:
    gem install win32console


== Usage
  Just tail your log files like you usually do.
  Eg.
  
    $ tail -f /log/test.log
    
  Then run your cucumber tests
    $ bundle exec cucumber
    
  And be amazed as your log files become just a little more fun.
  Disclaimer: Increased fun may vary from developer to developer.

  Try it on cucumber logs, we've done some fun things there.
  Eg.
    $ tail -f /log/cucumber.log

== Who?

  Richie Khoo is a developer from Melbourne, Australia. Don't be shy, you can follow me on twitter via @evolve2k

  Special thanks to: 
  Keith Pitt(@keithpitt), Pat Allan(@pat), Jared Fraser(@modsognir), Thomas Sinclair(@anathematic), mark_ryal(@markryall), Nathan Sampimon(@nathan_scott)
  and everyone else at Australian RailsCamp 9 who helped me with the code and understanding the inner workings of cucumber.

== Compatibility

  No known issues

== Contributing to frogger
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add rspec tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Richie Khoo. See LICENSE.txt for
further details.